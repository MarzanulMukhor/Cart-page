import 'package:flutter/material.dart';

void main() {
  runApp(const AgroKartBDApp());
}

class AgroKartBDApp extends StatelessWidget {
  const AgroKartBDApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'AgroKart BD',
      debugShowCheckedModeBanner: false,
      home: const CartPage(),
    );
  }
}

class CartItem {
  final String name;
  final String type;
  final String imageUrl;
  final double pricePerKg;
  int quantity;

  CartItem({
    required this.name,
    required this.type,
    required this.imageUrl,
    required this.pricePerKg,
    this.quantity = 1,
  });
}

class CartPage extends StatefulWidget {
  const CartPage({super.key});

  @override
  State<CartPage> createState() => _CartPageState();
}

class _CartPageState extends State<CartPage> {
  final List<CartItem> items = [
    CartItem(
      name: "Orange",
      type: "Fruits",
      pricePerKg: 2.99,
      imageUrl: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTYlsFm_UQ2WLkqXu-yZU4LIeLqkjzzSfsy1Q&s",
    ),
    CartItem(
      name: "Broccoli",
      type: "Vegetables",
      pricePerKg: 1.20,
      imageUrl: "https://upload.wikimedia.org/wikipedia/commons/0/03/Broccoli_and_cross_section_edit.jpg",
    ),
    CartItem(
      name: "Mango",
      type: "Fruits",
      pricePerKg: 1.50,
      imageUrl: "https://static.vecteezy.com/system/resources/thumbnails/026/795/003/small_2x/mango-fruit-tropical-transparent-png.png",
    ),
  ];

  final TextEditingController promoController = TextEditingController();
  double deliveryCharge = 2.00;
  double discount = 0.00;

  double calculateSubtotal() {
    return items.fold(0, (sum, item) => sum + (item.pricePerKg * item.quantity));
  }

  double calculateFinalTotal() {
    return calculateSubtotal() + deliveryCharge - discount;
  }

  @override
  Widget build(BuildContext context) {
    double subtotal = calculateSubtotal();
    double finalTotal = calculateFinalTotal();

    return Scaffold(
      backgroundColor: Colors.green[50],
      appBar: AppBar(
        title: const Text("Cart"),
        backgroundColor: Colors.green,
        elevation: 0,
        leading: const Icon(Icons.arrow_back),
        actions: const [
          Padding(
            padding: EdgeInsets.only(right: 16),
            child: Icon(Icons.search),
          )
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(12),
        child: Column(
          children: [
            ...items.map((item) => cartCard(item)).toList(),
            const SizedBox(height: 12),
            promoCodeSection(),
            const SizedBox(height: 8),
            summaryRow("Sub Total", subtotal),
            summaryRow("Delivery Charges", deliveryCharge),
            summaryRow("Discount", discount),
            const Divider(thickness: 1),
            summaryRow("Final Total", finalTotal),
            const SizedBox(height: 20),
            // Checkout Button
            SizedBox(
              width: double.infinity,
              height: 50,
              child: ElevatedButton(
                onPressed: () {},
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.green,
                  shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
                ),
                child: Text(
                  "Checkout",
                  style: const TextStyle(fontSize: 18),
                ),
              ),
            ),
            const SizedBox(height: 10),
            Text(
              "Total Price \$${finalTotal.toStringAsFixed(2)}",
              style: const TextStyle(fontSize: 16, fontWeight: FontWeight.w600),
            ),
          ],
        ),
      ),
    );
  }

  Widget cartCard(CartItem item) {
    return Card(
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(15)),
      margin: const EdgeInsets.only(bottom: 10),
      child: Padding(
        padding: const EdgeInsets.all(10),
        child: Row(
          children: [
            Image.network(item.imageUrl, width: 50, height: 50),
            const SizedBox(width: 10),
            Expanded(
              child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(item.name, style: const TextStyle(fontWeight: FontWeight.bold)),
                    Text(item.type),
                    Text("\$${item.pricePerKg.toStringAsFixed(2)}/KG",
                        style: const TextStyle(color: Colors.green)),
                  ]),
            ),
            Row(
              children: [
                IconButton(
                  icon: const Icon(Icons.remove_circle_outline),
                  onPressed: () {
                    setState(() {
                      if (item.quantity > 1) item.quantity--;
                    });
                  },
                ),
                Text("${item.quantity} KG"),
                IconButton(
                  icon: const Icon(Icons.add_circle_outline),
                  onPressed: () {
                    setState(() {
                      item.quantity++;
                    });
                  },
                ),
              ],
            )
          ],
        ),
      ),
    );
  }

  Widget promoCodeSection() {
    return Row(
      children: [
        Expanded(
          child: TextField(
            controller: promoController,
            decoration: InputDecoration(
              hintText: "Enter Promo Code",
              contentPadding: const EdgeInsets.symmetric(horizontal: 12),
              filled: true,
              fillColor: Colors.white,
              border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
            ),
          ),
        ),
        const SizedBox(width: 10),
        ElevatedButton(
          onPressed: () {
            setState(() {
              if (promoController.text.trim() == "AGRO10") {
                discount = 5.00;
              } else {
                discount = 0.00;
              }
            });
          },
          style: ElevatedButton.styleFrom(
            backgroundColor: Colors.green,
            padding: const EdgeInsets.symmetric(horizontal: 18, vertical: 15),
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
          ),
          child: const Text("Apply"),
        )
      ],
    );
  }

  Widget summaryRow(String label, double value) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(label),
          Text("\$${value.toStringAsFixed(2)}", style: const TextStyle(fontWeight: FontWeight.bold)),
        ],
      ),
    );
  }
}
